var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"tip: Tip\nAll additonal packages used in tests or docs need to be recorded in tests/Project.toml resp. docs/Project.toml, preferably with a [compat] entry.","category":"page"},{"location":"api/#Documentation","page":"API","title":"Documentation","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"docliterate\n@plotmodule\n@plotmodules","category":"page"},{"location":"api/#ExampleJuggler.docliterate","page":"API","title":"ExampleJuggler.docliterate","text":"     docliterate(example_sources;\n                 source_prefix = \"https://github.com/j-fu/ExampleJuggler.jl/blobs/main/examples\")\n\nGenerate markdown files for use with documenter from list of Julia code examples. See ExampleLiterate.jl for an example.\n\n\n\n\n\n","category":"function"},{"location":"api/#ExampleJuggler.@plotmodule","page":"API","title":"ExampleJuggler.@plotmodule","text":"@plotmodule(modules, kwargs...)\n\nInclude module into context of calling module and execute genplots(;kwargs...) if it exists.\n\n\n\n\n\n","category":"macro"},{"location":"api/#ExampleJuggler.@plotmodules","page":"API","title":"ExampleJuggler.@plotmodules","text":"@plotmodules(modules, kwargs...)\n\nPlot several scripts defining modules via @plotmodule.\n\n\n\n\n\n","category":"macro"},{"location":"api/#Testing","page":"API","title":"Testing","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"testplutonotebook\ntestplutonotebooks\n@testmodule\n@testmodules\n@testscript\n@testscripts","category":"page"},{"location":"api/#ExampleJuggler.testplutonotebook","page":"API","title":"ExampleJuggler.testplutonotebook","text":"testplutonotebook(notebookname; plutoenv = nothing)\n\nTest pluto notebook in a Pluto session.\n\n\n\n\n\n","category":"function"},{"location":"api/#ExampleJuggler.testplutonotebooks","page":"API","title":"ExampleJuggler.testplutonotebooks","text":" testplutonotebooks(notebooks; kwargs...)\n\nTest pluto notebooks via testplutonotebook.\n\n\n\n\n\n","category":"function"},{"location":"api/#ExampleJuggler.@testmodule","page":"API","title":"ExampleJuggler.@testmodule","text":"testmodule(module, kwargs...)\n\nInclude script defining a module in the context of the calling module and call the runtests method if it is defined in this module, passing kwargs....\n\n\n\n\n\n","category":"macro"},{"location":"api/#ExampleJuggler.@testmodules","page":"API","title":"ExampleJuggler.@testmodules","text":"@testmodules(modules, kwargs...)\n\nTest several scripts defining modules via @testmodule.\n\n\n\n\n\n","category":"macro"},{"location":"api/#ExampleJuggler.@testscript","page":"API","title":"ExampleJuggler.@testscript","text":"testscript(script)\n\nWrap script (or Pluto notebook seen as script) into a custom module and evaluate it in the context of the calling module. If the script contains a function  runtests, call it. It is assumed that the script uses Test.@test to test correctness. \n\n\n\n\n\n","category":"macro"},{"location":"api/#ExampleJuggler.@testscripts","page":"API","title":"ExampleJuggler.@testscripts","text":"@testscripts(scripts)\n\nRun scripts in the context of the calling module via @testscript\n\n\n\n\n\n","category":"macro"},{"location":"internal/#Internal-API","page":"Internal API","title":"Internal API","text":"","category":"section"},{"location":"internal/","page":"Internal API","title":"Internal API","text":"ExampleJuggler.replace_source_url","category":"page"},{"location":"internal/#ExampleJuggler.replace_source_url","page":"Internal API","title":"ExampleJuggler.replace_source_url","text":"replace_source_url(input, source_url)\n\n\nReplace SOURCE_URL marker with url of source. Used for preprocessing the input of Literate.markdown in ExampleJuggler.docliterate.\n\n\n\n\n\n","category":"function"},{"location":"mock/#Mock-methods","page":"Mock methods","title":"Mock methods","text":"","category":"section"},{"location":"mock/","page":"Mock methods","title":"Mock methods","text":"Modules = [ExampleJuggler]\nPages = [\"mock.jl\"]","category":"page"},{"location":"mock/#ExampleJuggler.mock_x-Tuple{}","page":"Mock methods","title":"ExampleJuggler.mock_x","text":"mock_x(; n, f)\n\n\nGenerate n-Vector X and return X, f.(X) for some function f;\n\n\n\n\n\n","category":"method"},{"location":"mock/#ExampleJuggler.mock_xt-Tuple{}","page":"Mock methods","title":"ExampleJuggler.mock_xt","text":"mock_xt(; n, m, f)\n\n\n    Generate n-Vector `X`, m-Vector `T` and return `X,T,[f(x,t) for x ∈ X, t∈T]` for some function f;\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"using Markdown\nMarkdown.parse(\"\"\"\n$(read(\"../../README.md\",String))\n\"\"\")","category":"page"},{"location":"_examples/ExampleLiterate/","page":"ExampleLiterate.jl","title":"ExampleLiterate.jl","text":"EditURL = \"../../../examples/ExampleLiterate.jl\"","category":"page"},{"location":"_examples/ExampleLiterate/#ExampleLiterate.jl","page":"ExampleLiterate.jl","title":"ExampleLiterate.jl","text":"","category":"section"},{"location":"_examples/ExampleLiterate/","page":"ExampleLiterate.jl","title":"ExampleLiterate.jl","text":"(source code)","category":"page"},{"location":"_examples/ExampleLiterate/","page":"ExampleLiterate.jl","title":"ExampleLiterate.jl","text":"This example can be used for documentation generation with Literate.jl via the ExampleJuggler.docliterate method.","category":"page"},{"location":"_examples/ExampleLiterate/","page":"ExampleLiterate.jl","title":"ExampleLiterate.jl","text":"(Image: )","category":"page"},{"location":"_examples/ExampleLiterate/","page":"ExampleLiterate.jl","title":"ExampleLiterate.jl","text":"(Image: )","category":"page"},{"location":"_examples/ExampleLiterate/","page":"ExampleLiterate.jl","title":"ExampleLiterate.jl","text":"module ExampleLiterate\n\nismakie(Plotter::Any) = false\nismakie(Plotter::Module) = isdefined(Plotter, :Makie)\n\nusing PkgDependency\nusing ExampleJuggler\nusing Test\n\nfunction main(; Plotter = nothing)\n    x, fx = mock_x()\n    @show maximum(fx)\n    if ismakie(Plotter)\n        p = Plotter.lines(x, fx)\n        Plotter.display(p)\n        if isinteractive()\n            print(\"press return to continue>\")\n            readline()\n        end\n    end\n\n    x, t, fxt = mock_xt()\n    if ismakie(Plotter)\n        p = Plotter.heatmap(x, t, fxt)\n        Plotter.display(p)\n    end\n    @show maximum(fxt)\n    maximum(fx), maximum(fxt)\nend\n\nfunction genplots(dir; Plotter = nothing)                    #hide\n    if ismakie(Plotter)                                      #hide\n        Plotter.activate!(; type = \"svg\", visible = false)   #hide\n        x, fx = mock_x()                                     #hide\n        p = Plotter.lines(x, fx)                             #hide\n        Plotter.save(joinpath(dir, \"mock_x.svg\"), p)         #hide\n        x, t, fxt = mock_xt()                                #hide\n        p = Plotter.heatmap(x, t, fxt)                       #hide\n        Plotter.save(joinpath(dir, \"mock_xt.svg\"), p)        #hide\n    end                                                      #hide\n    nothing                                                  #hide\nend                                                          #hide\n#hide\nfunction runtests(; a = 1)                                              #hide\n    @info a\n    maxfx, maxfxt = main()                                   #hide\n    @test isapprox(maxfx, 1.0; rtol = 1.0e-3)                #hide\n    @test isapprox(maxfxt, 1.0; rtol = 1.0e-3)               #hide\nend                                                          #hide\n\nend","category":"page"},{"location":"_examples/ExampleLiterate/","page":"ExampleLiterate.jl","title":"ExampleLiterate.jl","text":"","category":"page"},{"location":"_examples/ExampleLiterate/","page":"ExampleLiterate.jl","title":"ExampleLiterate.jl","text":"This page was generated using Literate.jl.","category":"page"}]
}
